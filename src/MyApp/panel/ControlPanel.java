package MyApp.panel;

import MyApp.building.Building;
import MyApp.elevator.Elevator;
import MyApp.kiosk.Kiosk;
import MyApp.misc.ElevatorStatus;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowEvent;
import java.util.Collection;

public class ControlPanel implements Panel {
    private final Building building;
    private final Collection<Kiosk> kiosks;
    private final Collection<Elevator> elevators;
    private Collection<ElevatorStatus> elevatorStatus;
    private JFrame frmControlPanel;

    private JPanel panelWrapper;
    private JPanel panelElevatorsInfo;
    private JPanel panelKiosksQueuesWrapper;
    private JLabel lblElevatorStatus;
    private JLabel lblElevatorQueue;
    private JLabel lblKioskQueues;
    private JLabel lblKioskFloor0;
    private JLabel lblKioskQueue0;
    private JPanel panelKiosksQueues;
    private JPanel panelElevatorQueue;
    private JPanel panelElevatorStatus;
    private JLabel lblElevatorStatus0;
    private JLabel lblElevatorStatusTitle0;
    private JLabel lblElevatorQueueTitle0;
    private JLabel lblElevatorQueue0;

    public ControlPanel(Building building) {
        this.building = building;
        this.kiosks = this.building.getKiosks();
        this.elevators = this.building.getElevators();
        this.elevatorStatus = this.building.getElevatorStatus();
        this.frmControlPanel = new JFrame("Control Panel");

        setupForm();
    }

    private void setupForm() {
        frmControlPanel.setSize(400, 500);
        frmControlPanel.setPreferredSize(new Dimension(400, 500));
        frmControlPanel.setContentPane(this.panelWrapper);
        frmControlPanel.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frmControlPanel.pack();
    }

    @Override
    public void showInfo() {
        EventQueue.invokeLater(() -> {
            try {
                frmControlPanel.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    public void dismissInfo() {
        EventQueue.invokeLater(() -> {
            try {
                frmControlPanel.dispatchEvent(new WindowEvent(frmControlPanel, WindowEvent.WINDOW_CLOSING));
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelWrapper = new JPanel();
        panelWrapper.setLayout(new GridBagLayout());
        panelElevatorsInfo = new JPanel();
        panelElevatorsInfo.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panelWrapper.add(panelElevatorsInfo, gbc);
        lblElevatorStatus = new JLabel();
        lblElevatorStatus.setFont(new Font(lblElevatorStatus.getFont().getName(), lblElevatorStatus.getFont().getStyle(), 20));
        lblElevatorStatus.setText("Elevator Status");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorsInfo.add(lblElevatorStatus, gbc);
        panelElevatorStatus = new JPanel();
        panelElevatorStatus.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelElevatorsInfo.add(panelElevatorStatus, gbc);
        lblElevatorStatusTitle0 = new JLabel();
        lblElevatorStatusTitle0.setText("Elevator {id}:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorStatus.add(lblElevatorStatusTitle0, gbc);
        lblElevatorStatus0 = new JLabel();
        lblElevatorStatus0.setText("{status-elevator-0}");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorStatus.add(lblElevatorStatus0, gbc);
        lblElevatorQueue = new JLabel();
        lblElevatorQueue.setFont(new Font(lblElevatorQueue.getFont().getName(), lblElevatorQueue.getFont().getStyle(), 20));
        lblElevatorQueue.setText("Elevator Queue");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorsInfo.add(lblElevatorQueue, gbc);
        panelElevatorQueue = new JPanel();
        panelElevatorQueue.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelElevatorsInfo.add(panelElevatorQueue, gbc);
        lblElevatorQueueTitle0 = new JLabel();
        lblElevatorQueueTitle0.setText("Elevator {id}:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorQueue.add(lblElevatorQueueTitle0, gbc);
        lblElevatorQueue0 = new JLabel();
        lblElevatorQueue0.setText("{queue-elevator-0}");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelElevatorQueue.add(lblElevatorQueue0, gbc);
        panelKiosksQueuesWrapper = new JPanel();
        panelKiosksQueuesWrapper.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panelWrapper.add(panelKiosksQueuesWrapper, gbc);
        lblKioskQueues = new JLabel();
        lblKioskQueues.setFont(new Font(lblKioskQueues.getFont().getName(), lblKioskQueues.getFont().getStyle(), 20));
        lblKioskQueues.setText("Kiosk Queue:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelKiosksQueuesWrapper.add(lblKioskQueues, gbc);
        panelKiosksQueues = new JPanel();
        panelKiosksQueues.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelKiosksQueuesWrapper.add(panelKiosksQueues, gbc);
        lblKioskFloor0 = new JLabel();
        lblKioskFloor0.setText("Floor {floor-name}:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelKiosksQueues.add(lblKioskFloor0, gbc);
        lblKioskQueue0 = new JLabel();
        lblKioskQueue0.setText("{queue}");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 5.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelKiosksQueues.add(lblKioskQueue0, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelWrapper;
    }
}

